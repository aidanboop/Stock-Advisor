# Deployment Configuration Guide

## Vercel Deployment

Create a `vercel.json` file in your project root:

```json
{
  "buildCommand": "next build",
  "outputDirectory": ".next",
  "framework": "nextjs",
  "regions": ["iad1"],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-XSS-Protection",
          "value": "1; mode=block"
        }
      ]
    }
  ],
  "env": {
    "POLYGON_API_KEY": "iSXY3oZv6A7gPxRq3xmI4zO7aKrMbHek"
  }
}
```

## Environment Variables

For Vercel:

1. Go to your project settings in the Vercel dashboard
2. Navigate to "Environment Variables" section
3. Add `POLYGON_API_KEY` with your actual Polygon.io API key
4. Make sure to set this for all environments (Production, Preview, Development)

For Netlify:

1. Go to your site settings in the Netlify dashboard
2. Navigate to "Build & deploy" â†’ "Environment variables"
3. Add `POLYGON_API_KEY` with your actual Polygon.io API key

## Using GitHub Actions (Alternative Deployment)

Create a `.github/workflows/deploy.yml` file:

```yaml
name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      env:
        POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./out
```

## Important Security Notes

1. **Never commit API keys to version control**
   - Always use environment variables for API keys
   - Add `.env` and `.env.local` to your `.gitignore` file

2. **API Rate Limiting**
   - The Polygon.io free tier has strict rate limits
   - Our enhanced refresh implementation helps manage these limits
   - Consider upgrading to a paid plan for production use

3. **CORS Configuration**
   - If you experience CORS issues during deployment, you may need to configure additional headers in your `next.config.js` file

## Production Checklist

Before deploying to production:

1. Remove any dummy API keys
2. Set all required environment variables
3. Update the `NEXT_PUBLIC_APP_URL` to your production URL
4. Consider using a CDN for better performance
5. Test the application thoroughly
